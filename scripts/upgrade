#!/bin/bash

set -e

# Load common variables and helpers
. ./_common.sh

# Set app specific variables
app=$1
dbname=$app
dbuser=$app

# Source app helpers
. /usr/share/yunohost/apps/helpers

# Retrieve app settings
domain=$(ynh_app_setting_get $app domain)
path=$(ynh_app_setting_get $app path)
dbpass=$(ynh_app_setting_get $app mysqlpwd)

# Check destination directory
DESTDIR="/var/www/$app"
[[ ! -d $DESTDIR ]] && die \
"The destination directory '$DESTDIR' does not exist.\
 The app is not correctly installed, you should remove it first."

# Create tmp directory and install app inside
TMPDIR=$(ynh_mkdir_tmp)
install_with_composer "$TMPDIR"
cp ../sources/bin/installto.sh "${TMPDIR}/bin/"

# Generate a new random DES key
deskey=$(ynh_string_random 24)

# Copy and set Roundcube configuration
rc_conf="${TMPDIR}/config/config.inc.php"
cp ../conf/config.inc.php "$rc_conf"
sed -i "s/#DESKEY#/${deskey}/g" "$rc_conf"
sed -i "s/#DBUSER#/${dbuser}/g" "$rc_conf"
sed -i "s/#DBPASS#/${dbpass}/g" "$rc_conf"
sed -i "s/#DBNAME#/${dbname}/g" "$rc_conf"

# Execute Roundcube update script
sudo php "${TMPDIR}/bin/installto.sh" "$DESTDIR" --no-interaction \
  || die "Unable to update Roundcube installation"
(cd "$DESTDIR" && sudo php composer.phar update --quiet -n --no-dev) \
  || die "Unable to update dependencies"
rm -rf "$TMPDIR"

## Install rcmcarddav if baikal is detected
#sudo yunohost app list -f baikal --json | grep '"installed": true'
#if [ "$?" -eq 0 ]; then
#  echo "Detected Baikal"
#
#  caldavdomain=$(sudo yunohost app setting baikal domain)
#  caldavpath=$(sudo yunohost app setting baikal path)
#  caldavpath=${caldavpath%/}
#
#  sed -i "s@yuno_baikal_domain@$caldavdomain@g" ../conf/rcmcarddav.config.inc.php
#  sed -i "s@yuno_baikal_path@$caldavpath@g" ../conf/rcmcarddav.config.inc.php
#  sudo cp ../conf/rcmcarddav.config.inc.php $final_path/plugins/carddav/config.inc.php
#
#  sudo sed -i "s@yuno_enable_carddav@True@g" $final_path/config/main.inc.php
#
#  mysql -u $db_user -p$db_pwd $db_user < ../sources/plugins/carddav/dbinit/mysql-drop.sql
#  mysql -u $db_user -p$db_pwd $db_user < ../sources/plugins/carddav/dbinit/mysql.sql
#else
#  mysql -u $db_user -p$db_pwd $db_user < ../sources/plugins/carddav/dbinit/mysql-drop.sql
#  sudo sed -i "s@yuno_enable_carddav@False@g" $final_path/config/main.inc.php
#fi

# Fix installation directories and permissions
sudo mkdir -p "${DESTDIR}/logs" "${DESTDIR}/temp"
sudo chown -R www-data: "$DESTDIR"

# Copy and set nginx configuration
nginx_conf="/etc/nginx/conf.d/${domain}.d/${app}.conf"
sed -i "s@#PATH#@${path}@g"        ../conf/nginx.conf
sed -i "s@#DESTDIR#@${DESTDIR}/@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf "$nginx_conf"

# Copy and set php-fpm configuration
phpfpm_conf="/etc/php5/fpm/pool.d/${app}.conf"
sed -i "s@#POOLNAME#@${app}@g"     ../conf/php-fpm.conf
sed -i "s@#DESTDIR#@${DESTDIR}/@g" ../conf/php-fpm.conf
sudo cp ../conf/php-fpm.conf "$phpfpm_conf"
sudo chown root: $phpfpm_conf
sudo chmod 644 $phpfpm_conf

# Reload services
sudo service php5-fpm restart || true
sudo service nginx reload || true
